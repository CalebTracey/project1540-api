// Code generated by MockGen. DO NOT EDIT.
// Source: mapper.go

// Package dao is a generated GoMock package.
package dao

import (
	models "project1540-api/external/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIMapper is a mock of IMapper interface.
type MockIMapper struct {
	ctrl     *gomock.Controller
	recorder *MockIMapperMockRecorder
}

// MockIMapperMockRecorder is the mock recorder for MockIMapper.
type MockIMapperMockRecorder struct {
	mock *MockIMapper
}

// NewMockIMapper creates a new mock instance.
func NewMockIMapper(ctrl *gomock.Controller) *MockIMapper {
	mock := &MockIMapper{ctrl: ctrl}
	mock.recorder = &MockIMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMapper) EXPECT() *MockIMapperMockRecorder {
	return m.recorder
}

// ErrorLog mocks base method.
func (m *MockIMapper) ErrorLog(rootCause, trace string, statusCode int) *models.ErrorLog {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ErrorLog", rootCause, trace, statusCode)
	ret0, _ := ret[0].(*models.ErrorLog)
	return ret0
}

// ErrorLog indicates an expected call of ErrorLog.
func (mr *MockIMapperMockRecorder) ErrorLog(rootCause, trace, statusCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ErrorLog", reflect.TypeOf((*MockIMapper)(nil).ErrorLog), rootCause, trace, statusCode)
}
