// Code generated by MockGen. DO NOT EDIT.
// Source: dao.go

// Package postgres is a generated GoMock package.
package postgres

import (
	context "context"
	reflect "reflect"

	postgres "github.com/calebtracey/project1540-api/external/models/postgres"
	gomock "go.uber.org/mock/gomock"
)

// MockIDAO is a mock of IDAO interface.
type MockIDAO struct {
	ctrl     *gomock.Controller
	recorder *MockIDAOMockRecorder
}

// MockIDAOMockRecorder is the mock recorder for MockIDAO.
type MockIDAOMockRecorder struct {
	mock *MockIDAO
}

// NewMockIDAO creates a new mock instance.
func NewMockIDAO(ctrl *gomock.Controller) *MockIDAO {
	mock := &MockIDAO{ctrl: ctrl}
	mock.recorder = &MockIDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDAO) EXPECT() *MockIDAOMockRecorder {
	return m.recorder
}

// InsertOneFile mocks base method.
func (m *MockIDAO) InsertOneFile(ctx context.Context, query string, payload *postgres.File) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertOneFile", ctx, query, payload)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertOneFile indicates an expected call of InsertOneFile.
func (mr *MockIDAOMockRecorder) InsertOneFile(ctx, query, payload interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertOneFile", reflect.TypeOf((*MockIDAO)(nil).InsertOneFile), ctx, query, payload)
}

// SearchFilesByTag mocks base method.
func (m *MockIDAO) SearchFilesByTag(ctx context.Context, query string, tags []string) ([]*postgres.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchFilesByTag", ctx, query, tags)
	ret0, _ := ret[0].([]*postgres.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchFilesByTag indicates an expected call of SearchFilesByTag.
func (mr *MockIDAOMockRecorder) SearchFilesByTag(ctx, query, tags interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchFilesByTag", reflect.TypeOf((*MockIDAO)(nil).SearchFilesByTag), ctx, query, tags)
}
